name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  # Container-based testing and building
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        target: ci
        tags: lsmcp:ci
        load: true
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Run type checking in container
      run: |
        docker run --rm -v "${{ github.workspace }}:${{ github.workspace }}" -w "${{ github.workspace }}" \
        lsmcp:ci npm run type-check
    
    - name: Run linting in container
      run: |
        docker run --rm -v "${{ github.workspace }}:${{ github.workspace }}" -w "${{ github.workspace }}" \
        lsmcp:ci npm run lint
    
    - name: Run all tests in container
      run: |
        docker run --rm -v "${{ github.workspace }}:${{ github.workspace }}" -w "${{ github.workspace }}" \
        lsmcp:ci npm test -- --coverage
    
    - name: Extract build artifacts from container
      run: |
        # Create a temporary container to copy build artifacts
        container_id=$(docker create lsmcp:ci)
        docker cp "$container_id:/app/dist" ./dist
        docker rm "$container_id"
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: dist/

  docker-compose-test:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Test Docker compose configuration
      run: |
        # Test docker-compose setup
        echo "WORKSPACE_ROOT=${PWD}" > .env
        docker-compose config

  # Efficiency benchmark job disabled - see issue #17
  # efficiency-benchmark:
  #   runs-on: ubuntu-latest
  #   needs: test
  #   
  #   steps:
  #   - uses: actions/checkout@v4
  #   
  #   - name: Use Node.js
  #     uses: actions/setup-node@v4
  #     with:
  #       node-version: '20.x'
  #       cache: 'npm'
  #   
  #   - name: Install dependencies
  #     run: npm ci
  #   
  #   - name: Run efficiency benchmarks
  #     run: npm run test:efficiency -- --json --outputFile=efficiency-results.json
  #     continue-on-error: true
  #   
  #   - name: Comment PR with efficiency results
  #     if: github.event_name == 'pull_request'
  #     uses: actions/github-script@v7
  #     with:
  #       script: |
  #         const fs = require('fs');
  #         try {
  #           const results = JSON.parse(fs.readFileSync('efficiency-results.json', 'utf8'));
  #           const comment = `## Efficiency Benchmark Results\n\n${JSON.stringify(results, null, 2)}`;
  #           github.rest.issues.createComment({
  #             issue_number: context.issue.number,
  #             owner: context.repo.owner,
  #             repo: context.repo.repo,
  #             body: comment
  #           });
  #         } catch (e) {
  #           console.log('No efficiency results to report');
  #         }